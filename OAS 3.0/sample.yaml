openapi:  3.0.3
info: 
  title:  Sample Application
  version: 1.0.0
paths:  
  /products:
    get:
      description:  Get a list of products.
      parameters:
        - name: productName
          in: query
          description:  Filter on the product name
          required: false
          schema:
            type: string
      responses:
        '200':
          description:  Successfully returned a list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './schemas/Product.yaml#/components/schemas/Product'
        '404':
          description: Product not found

  /customer:
    post:
      description: Add a new customer
      requestBody:
        description: Create a new customer
        content:
          application/json:
            schema:
              $ref: './schemas/Customer.yaml#/components/schemas/Customer'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: './schemas/Customer.yaml#/components/schemas/Customer'
        '405':
          description: Invalid input
  /order:
    post:
      description: Create a new order
      requestBody:
        content:
          application/json:
            schema:
             $ref: './schemas/Order.yaml#/components/schemas/Order'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid Order
  /order/{id}:
    get:
      description: Inquire about the status of a pending order
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the order to retrieve
          schema:
            type: string
        - name: status
          in: query
          required: true
          schema:
            type: string
            default: pending
      responses:
        '200': 
          description: Successful operation
          content:
            application/json:
              schema:
                 $ref: './schemas/Order.yaml#/components/schemas/Order'
        '400':
          description: Invalid ID supplied
        '404':
          description: Order not found
  /order/findByStatus:
    get:
      description: Find all pending orders
      parameters:
        - name: status
          in: query
          description: Find all orders with pending status
          required: true
          explode: true
          schema:
            type: string
            default: pending
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: './schemas/Order.yaml#/components/schemas/Order'
        '400':
          description: Invalid status value
